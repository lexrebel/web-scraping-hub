swagger: '2.0'
info:
  title: Web Scraping Hub
  description: Collection of APIs to perform web scraping as a service
  version: 1.0.0
schemes:
  - https
paths:
  /websites:
    post:
      summary: Create a new website for web scraping
      operationId: createWebsite
      consumes:
        - application/json
      produces:
        - application/json
      x-google-backend:
        address: https://southamerica-east1-web-scraping-hub.cloudfunctions.net/create-website
      parameters:
        - in: body
          name: website
          description: Data of the website to be created
          required: true
          schema:
            $ref: '#/definitions/WebsiteDTO'
      responses:
        '201':
          description: Website created successfully
          schema:
            $ref: '#/definitions/Website'
        "400":
          description: "Bad request"
        "500":
          description: "Internal server error"
  /websites/{id}:
    put:
      summary: Update an existing website for web scraping
      operationId: updateWebsite
      consumes:
        - application/json
      produces:
        - application/json
      x-google-backend:
        address: https://southamerica-east1-web-scraping-hub.cloudfunctions.net/update-website
      parameters:
        - in: path
          name: id
          description: ID of the website to update
          required: true
          type: integer
        - in: body
          name: website
          description: Updated website data.
          required: true
          schema:
            $ref: '#/definitions/WebsiteDTO'
      responses:
        '200':
          description: Website updated successfully
          schema:
            $ref: '#/definitions/Website'
        "400":
          description: "Bad request"
        "404":
          description: "Website not found"
        "500":
          description: "Internal server error"
  /scrapes/{id}:
    put:
      summary: Scrape a website that correspond the id
      operationId: scrapeWebsite
      consumes:
        - application/json
      produces:
        - application/json
      x-google-backend:
        address: https://southamerica-east1-web-scraping-hub.cloudfunctions.net/scrape-website
      parameters:
        - in: path
          name: id
          description: ID of the website to scrape
          required: true
          type: integer
      responses:
        '200':
          description: Website scraped successfully
          schema:
            $ref: '#/definitions/Scrape'
        "400":
          description: "Bad request"
        "404":
          description: "Website not found"
        "500":
          description: "Internal server error"
  /data/{id}:
    get:
      summary: Get website data by id.
      operationId: getWebsiteData
      consumes:
        - application/json
      produces:
        - application/json
      x-google-backend:
        address: https://southamerica-east1-web-scraping-hub.cloudfunctions.net/get-website-data
      parameters:
        - in: path
          name: id
          description: ID of the website
          required: true
          type: integer
      responses:
        '200':
          description: Website updated successfully
          schema:
            $ref: '#/definitions/Scrapes'
        "400":
          description: "Bad request"
        "404":
          description: "Scrapes not found"
        "500":
          description: "Internal server error"
  /export/{id}:
    get:
      summary: Export website data as CSV by id.
      operationId: exportWebsiteData
      consumes:
        - application/json
      produces:
        - application/json
      x-google-backend:
        address: https://southamerica-east1-web-scraping-hub.cloudfunctions.net/export-website-data
      parameters:
        - in: path
          name: id
          description: ID of the website
          required: true
          type: integer
      responses:
        "200":
          description: "Successful response"
        "400":
          description: "Bad request"
        "404":
          description: "Scrapes not found"
        "500":
          description: "Internal server error"
security:
  - apiKey: []
definitions:
  WebsiteDTO:
    type: object
    properties:
      id:
        type: integer
        description: ID of the website to update.
      url:
        type: string
        description: Updated URL of the website.
      name:
        type: string
        description: Updated name or identifier for the website.
      rowSelector:
        type: string
        description: Updated selector for rows on the webpage.
      columnSelectors:
        type: array
        items:
          type: string
        description: Updated list of selectors for columns within each row.
  Website:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the website.
      websiteDTO:
        $ref: '#/definitions/WebsiteDTO'
      createdAt:
        type: string
        format: date-time
        description: Timestamp for when the website entry was created.
      updatedAt:
        type: string
        format: date-time
        description: Timestamp for when the website entry was last updated.
  Scrape:
    type: object
    properties:
      scrapeTime:
        type: string
        format: date-time
      data:
        type: array
        items:
          type: object
          properties:
            columnName:
              type: string
  Scrapes:
    type: "object"
    properties:
      id:
        type: "string"
      url:
        type: "string"
      name:
        type: "string"
      rowSelector:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      columnSelectors:
        type: "array"
        items:
          type: "string"
      iterations:
        type: "array"
        items:
          $ref: "#/definitions/WebsiteScrape"
  WebsiteScrape:
    type: "object"
    properties:
      scrapeTime:
        type: "string"
        format: "date-time"
      data:
        type: "array"
        items:
          type: "object"

securityDefinitions:
  apiKey:
    type: apiKey
    name: X-API-Key
    in: header
